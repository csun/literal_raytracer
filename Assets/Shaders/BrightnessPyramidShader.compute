#pragma kernel BrightnessPyramid
#define GROUP_SIZE 8
#define THREAD_REGION_SIZE 4

Texture2D<float> _Input;
RWTexture2D<float> _Output;

[numthreads(GROUP_SIZE, GROUP_SIZE, 1)]
void BrightnessPyramid(uint3 id : SV_DispatchThreadID)
{
	// TODO change other shaders so that the total luminance map is separate texture not alpha channel

	float brightest = 0;
	uint3 start = id * THREAD_REGION_SIZE;

	for (int x = 0; x < THREAD_REGION_SIZE; x++)
	{
		for (int y = 0; y < THREAD_REGION_SIZE; y++)
		{
			brightest = max(brightest, _Input[uint2(start.x + x, start.y + y)]);
		}
	}

	_Output[id.xy] = brightest;

	// TODO queue this compute shader to run the correct number of times to cover screen
	// TODO At beginning, input is the total luminance map. After, it's the previous output channel
	// TODO at end brightest pixel at 0,0
}
